// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_App
#include <App.h>
#endif
#ifndef INCLUDED_Minawan
#include <Minawan.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_math_FlxBasePoint
#include <flixel/math/FlxBasePoint.h>
#endif
#ifndef INCLUDED_flixel_math_FlxRandom
#include <flixel/math/FlxRandom.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_597ea3bd8e20311a_7_new,"Minawan","new",0x83316d47,"Minawan.new","Minawan.hx",7,0x67e81809)

void Minawan_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_597ea3bd8e20311a_7_new)
HXLINE(  10)		this->minawanName = HX_("",00,00,00,00);
HXLINE(   9)		this->direction = 1;
HXLINE(  15)		this->minawanName = ( (::String)(::App_obj::names->__get(::flixel::FlxG_obj::random->_hx_int(0,::App_obj::names->get_length(),null()))) );
HXLINE(  16)		::haxe::Log_obj::trace((HX_("Hi my name is ",56,ec,d8,db) + this->minawanName),::hx::SourceInfo(HX_("source/Minawan.hx",fd,df,4c,f4),16,HX_("Minawan",d5,bd,f9,13),HX_("new",60,d0,53,00)));
HXLINE(  18)		Float _hx_tmp = this->getGraphicMidpoint(null())->x;
HXDLIN(  18)		Float _hx_tmp1 = (this->getGraphicMidpoint(null())->y - ( (Float)(100) ));
HXDLIN(  18)		this->minawanNameDisplay =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,_hx_tmp,_hx_tmp1,null(),this->minawanName,null(),null());
HXLINE(  21)		super::__construct(null(),null(),null());
            	}

Dynamic Minawan_obj::__CreateEmpty() { return new Minawan_obj; }

void *Minawan_obj::_hx_vtable = 0;

Dynamic Minawan_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Minawan_obj > _hx_result = new Minawan_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Minawan_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2c01639b) {
		if (inClassId<=(int)0x0e47094d) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x0e47094d;
		} else {
			return inClassId==(int)0x2c01639b;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}


::hx::ObjectPtr< Minawan_obj > Minawan_obj::__new() {
	::hx::ObjectPtr< Minawan_obj > __this = new Minawan_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Minawan_obj > Minawan_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Minawan_obj *__this = (Minawan_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Minawan_obj), true, "Minawan"));
	*(void **)__this = Minawan_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Minawan_obj::Minawan_obj()
{
}

void Minawan_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Minawan);
	HX_MARK_MEMBER_NAME(direction,"direction");
	HX_MARK_MEMBER_NAME(minawanName,"minawanName");
	HX_MARK_MEMBER_NAME(minawanNameDisplay,"minawanNameDisplay");
	 ::flixel::FlxSprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Minawan_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(direction,"direction");
	HX_VISIT_MEMBER_NAME(minawanName,"minawanName");
	HX_VISIT_MEMBER_NAME(minawanNameDisplay,"minawanNameDisplay");
	 ::flixel::FlxSprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Minawan_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"direction") ) { return ::hx::Val( direction ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"minawanName") ) { return ::hx::Val( minawanName ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"minawanNameDisplay") ) { return ::hx::Val( minawanNameDisplay ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Minawan_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"direction") ) { direction=inValue.Cast< int >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"minawanName") ) { minawanName=inValue.Cast< ::String >(); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"minawanNameDisplay") ) { minawanNameDisplay=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Minawan_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("direction",3f,62,40,10));
	outFields->push(HX_("minawanName",e0,d2,1b,b4));
	outFields->push(HX_("minawanNameDisplay",42,9b,a1,cb));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Minawan_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(Minawan_obj,direction),HX_("direction",3f,62,40,10)},
	{::hx::fsString,(int)offsetof(Minawan_obj,minawanName),HX_("minawanName",e0,d2,1b,b4)},
	{::hx::fsObject /*  ::flixel::text::FlxText */ ,(int)offsetof(Minawan_obj,minawanNameDisplay),HX_("minawanNameDisplay",42,9b,a1,cb)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Minawan_obj_sStaticStorageInfo = 0;
#endif

static ::String Minawan_obj_sMemberFields[] = {
	HX_("direction",3f,62,40,10),
	HX_("minawanName",e0,d2,1b,b4),
	HX_("minawanNameDisplay",42,9b,a1,cb),
	::String(null()) };

::hx::Class Minawan_obj::__mClass;

void Minawan_obj::__register()
{
	Minawan_obj _hx_dummy;
	Minawan_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("Minawan",d5,bd,f9,13);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Minawan_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Minawan_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Minawan_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Minawan_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

