// Generated by Haxe 4.3.4
#ifndef INCLUDED_App
#define INCLUDED_App

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(App)



class HXCPP_CLASS_ATTRIBUTES App_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef App_obj OBJ_;
		App_obj();

	public:
		enum { _hx_ClassId = 0x7ed5f915 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="App")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"App"); }

		inline static ::hx::ObjectPtr< App_obj > __new() {
			::hx::ObjectPtr< App_obj > __this = new App_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< App_obj > __alloc(::hx::Ctx *_hx_ctx) {
			App_obj *__this = (App_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(App_obj), false, "App"));
			*(void **)__this = App_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~App_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("App",81,b4,31,00); }

		static void __boot();
		static ::cpp::VirtualArray names;
		static void initCore();
		static ::Dynamic initCore_dyn();

		static void getAllNames();
		static ::Dynamic getAllNames_dyn();

};


#endif /* INCLUDED_App */ 
